What happens when you initialize a repository? Why do you need to do it?

Git start traking the changes over the created repository and we need it to help us to track the changes that we did along a proyect.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?

That helps you to manage what to merge or what to don't and void making a mess in a manually way.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area helps to track the changes of a file for a specific commit, and therefore it helps to keep a best tracking of the changes

How can you use the staging area to make sure you have one commit per logical change?

	Using git diff --staged.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When you want to make a demo of a change or a major change that probably is not approved yet

How do the diagrams help you visualize the branch structure?

	Now I can realize which is the complete structure of git and how the branches work.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	A single branche with the changes of both and also the commits of each one and also is represented in the diagram in the way we do because that single remaining branch comes from an other two branches.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

	I think that there is not any cons, because git don't merge the code automatically exactly when it shouldn't be merged letting you to make the respective changes.